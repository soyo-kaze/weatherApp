{"version":3,"sources":["Wea.js","App.js","index.js"],"names":["Wea","api","iploc","useState","query","setQuery","weather","setWeather","setIp","iplocation","x","fetch","then","res","json","result","weatherF","region_name","useEffect","clientIp","ip","d","Date","date","getHours","getMinutes","getDay","getMonth","getFullYear","className","main","temp","Container","Col","type","placeholder","onChange","e","target","value","onKeyPress","key","console","log","name","sys","country","Math","round","App","ReactDom","render","document","getElementById"],"mappings":"gNA4HeA,EAvHH,WACV,IAAMC,EACC,mCADDA,EAEE,2CAGFC,EACC,mCADDA,EAEE,0BARQ,EAWUC,mBAAS,IAXnB,mBAWTC,EAXS,KAWFC,EAXE,OAYcF,mBAAS,IAZvB,mBAYTG,EAZS,KAYAC,EAZA,OAaIJ,mBAAS,IAbb,mBAaLK,GAbK,WAiCVC,EAAa,SAACC,GAClBC,MAAM,GAAD,OAAIT,GAAJ,OAAiBQ,EAAjB,uBAAiCR,IACnCU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,IAZM,SAACJ,GAChBC,MAAM,GAAD,OAAIV,EAAJ,qBAAyBS,EAAzB,+BAAiDT,IACnDW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAWQ,MAWXC,CAASF,EAAKG,iBAGpBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,WACfR,MAAM,sCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLN,EAAMM,EAAKM,IACXX,EAAWK,EAAKM,QAUhBC,EAAI,IAAIC,KAERC,EAAI,UAAMF,EAAEG,WAAR,YAAsBH,EAAEI,aAAxB,YADE,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACDJ,EAAEK,UAA9C,YACRL,EAAEM,WAAa,EADP,YAENN,EAAEO,eAEN,OACE,oCACE,yBACEC,UACyB,oBAAhBvB,EAAQwB,MACXxB,EAAQwB,KAAKC,KAAO,GAClB,MAEF,YAGN,8BACE,kBAACC,EAAA,EAAD,CAAWH,UAAU,WACnB,kBAACI,EAAA,EAAD,CAAKJ,UAAU,eACb,yBAAKA,UAAU,UACb,2BACEK,KAAK,OACLL,UAAU,aACVM,YAAY,eACZC,SAAU,SAACC,GAAD,OAAOhC,EAASgC,EAAEC,OAAOC,QACnCA,MAAOnC,EACPoC,WAlCD,SAACH,GACA,UAAVA,EAAEI,MAvCN9B,MAAM,GAAD,OAAIV,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAWQ,GACX2B,QAAQC,IAAIrC,MAqCdD,EAAS,WAoCmB,oBAAhBC,EAAQwB,KACd,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKJ,UAAU,eACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,YACZvB,EAAQsC,KADX,KACmBtC,EAAQuC,IAAIC,SAE/B,yBAAKjB,UAAU,QAAQN,GACvB,yBAAKM,UAAU,QAAQkB,KAAKC,MAAM1C,EAAQwB,KAAKC,MAA/C,SACA,yBAAKF,UAAU,SAASvB,EAAQA,QAAQ,GAAGwB,SAKjD,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKJ,UAAU,eACb,yBAAKA,UAAU,YAAf,oBCnGDoB,G,KARH,WACV,OACE,oCACE,kBAAC,EAAD,SCNNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.63ea85a1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst Wea = () => {\r\n  const api = {\r\n    key: \"c0b4b07a00e2c3db10fd7f42473c0da7\",\r\n    call: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n\r\n  const iploc = {\r\n    key: \"ae377611f5faacfea74a9d4185fe8c7a\",\r\n    call: \"http://api.ipstack.com/\",\r\n  };\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n  const [ip, setIp] = useState(\"\");\r\n\r\n  const weatherFetch = () => {\r\n    fetch(`${api.call}weather?q=${query}&units=metric&appid=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setWeather(result);\r\n        console.log(weather);\r\n      });\r\n  };\r\n\r\n  const weatherF = (x) => {\r\n    fetch(`${api.call}weather?q=${x}&units=metric&appid=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setWeather(result);\r\n        //console.log(weather);\r\n      });\r\n  };\r\n\r\n  const iplocation = (x) => {\r\n    fetch(`${iploc.call}${x}?access_key=${iploc.key}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        //setQuery(json.region_name);\r\n        //console.log(json);\r\n        weatherF(json.region_name);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    clientIp();\r\n  }, []);\r\n\r\n  const clientIp = () => {\r\n    fetch(\"https://api.ipify.org/?format=json\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setIp(json.ip);\r\n        iplocation(json.ip);\r\n      });\r\n  };\r\n  const search = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      weatherFetch();\r\n      setQuery(\"\");\r\n    }\r\n  };\r\n\r\n  const d = new Date();\r\n  const day = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const date = `${d.getHours()}:${d.getMinutes()} ${day[d.getDay()]} ${\r\n    d.getMonth() + 1\r\n  } ${d.getFullYear()}`;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          typeof weather.main != \"undefined\"\r\n            ? weather.main.temp > 16\r\n              ? \"app\"\r\n              : \"app cold\"\r\n            : \"app cold\"\r\n        }\r\n      >\r\n        <main>\r\n          <Container className=\"contain\">\r\n            <Col className=\"text-center\">\r\n              <div className=\"search\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"search-box\"\r\n                  placeholder=\"Location....\"\r\n                  onChange={(e) => setQuery(e.target.value)}\r\n                  value={query}\r\n                  onKeyPress={search}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Container>\r\n          {typeof weather.main != \"undefined\" ? (\r\n            <Container>\r\n              <Col className=\"text-center\">\r\n                <div className=\"weather\">\r\n                  <div className=\"location\">\r\n                    {weather.name}, {weather.sys.country}\r\n                  </div>\r\n                  <div className=\"time\">{date}</div>\r\n                  <div className=\"temp\">{Math.round(weather.main.temp)}Â°C</div>\r\n                  <div className=\"atmos\">{weather.weather[0].main}</div>\r\n                </div>\r\n              </Col>\r\n            </Container>\r\n          ) : (\r\n            <Container>\r\n              <Col className=\"text-center\">\r\n                <div className=\"location\">Loading...</div>\r\n              </Col>\r\n            </Container>\r\n          )}\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wea;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport Wea from \"./Wea\";\r\nimport \"./index.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Wea />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}